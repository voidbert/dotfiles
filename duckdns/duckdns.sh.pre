#!/bin/sh

# ----------------------------------- ABOUT -----------------------------------
#
# A script to update your IP in DuckDNS's servers, logging events to a file.
#
# ---------------------------------- LICENSE ----------------------------------
#
# Copyright 2023 Humberto Gomes
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ------------------------------- CONFIGURATION -------------------------------

# Comma-separated DuckDNS domains.
# E.g.: xxxxxx.duckdns.org and yyyyyy.duckdns.org becomes "xxxxxx,yyyyyy"
domains="%SERVER_DOMAIN%"

# Your login token.
token="%DUCKDNS_TOKEN%"

# The path to the log file. Leave empty for no logging.
log_file="%DUCKDNS_LOGFILE%"

# The path to a temporary file for curl output.
tmp_file="/tmp/duckdns"

# ---------------------------------- SCRIPT ----------------------------------

url="https://www.duckdns.org/update?domains=$domains&token=$token&verbose=true"
http_code=$(curl -s -w "%{http_code}" -o "$tmp_file" "$url")
curl_code=$?

write=$(date +"%Y/%m/%d %H:%M:%S -")

if [ "$curl_code" -eq 0 ]; then
	if [ "$http_code" -eq 200 ]; then
		if [ "$(head -n 1 $tmp_file)" = "OK" ]; then # OK and KO message
			# Date - CHANGE/NOCHANGE (last lines) IP (2nd line)
			write="$write $(tail -n 1 $tmp_file) $(sed -n "2p" $tmp_file)"
			return_code=0
		else
			write="$write DuckDNS KO. Here's the response:\n$(cat $tmp_file)"
			return_code=1
		fi
	else
		write="$write HTTP CODE $http_code"

		# Don't print the response it it's empty
		pattern=$(printf '[^\s\r]') # printf for carriage return support
		if grep "$pattern" "$tmp_file"; then
			response=$(cat $tmp_file)
			write="$write. Here's the response:\n$response"
		fi

		return_code=1
	fi
else
	write="$write CURL RETURN VALUE $curl_code. See curl (1)"
	return_code=1
fi

if [ -n "$log_file" ]; then
	echo "$write" >> "$log_file"
fi
exit "$return_code"

